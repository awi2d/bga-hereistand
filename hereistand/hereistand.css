/**
 *------
 * BGA framework: © Gregory Isabelli <gisabelli@boardgamearena.com> & Emmanuel Colin <ecolin@boardgamearena.com>
 * HereIStand implementation : © <Your name here> <Your email address here>
 *
 * This code has been produced on the BGA studio platform for use on http://boardgamearena.com.
 * See http://en.boardgamearena.com/#!doc/Studio for more information.
 * -----
 *
 * hereistand.css
 *
 * HereIStand stylesheet
 *
 */

/*
    This is the CSS stylesheet of your game User Interface.
    
    Styles defined on this file will be applied to the HTML elements you define in your
    HTML template (hereistand_hereistand.tpl), and to HTML elements you create dynamically
    (in hereistand.js).
    
    Usually, you are using CSS to:
    
    1°) define the overall layout of your game
        (ex: place the board on the top left, place player's hand beside, place the deck on the right, ...).

    2°) create your CSS-sprites:
        All images of your games should be gathered into a small number of image files. Then, using
        background-image and background-position CSS properties, you create HTML blocks that can 
        display these images correctly (see example below).
    
    3°) ... anything else:
        It is really easy to add and remove CSS classes dynamically from your Javascript with
        dojo.addClass and dojo.removeClass. It is also easy to check if an element has a class
        (dojo.hasClass) or to get all elements with a specific class (dojo.query). This is why,
        very often, using CSS classes for the logic of your user interface allow you to do complex
        thing easily.
        
        
     Note: on the production platform, this file will be compressed and comments will be removed.
           Consequently, don't hesitate to put as many comments as necessary.
*/


/* Note: you must not use any @import directive */


/********* You can start writing your CSS below this line: **********/


/*
    Example of CSS sprites (a black token and a white token, 20x20px each, embedded in the same "tokens.png" 40x20px image):

    .white_token {
        background-image: url('img/tokens.png');
        background-position: 0px 0px;
    }
    .black_token {
        background-image: url('img/tokens.png');
        background-position: -20px 0px;
    }
    .token {
        width: 20px;
        height: 20px;
        background-repeat: none;
    }
*/

#board {
	position: relative;
    transform-origin: top left;
	height: 1544px;
	width: max;
}




#map {
	position: relative;


	min-width: 100%;
	min-height: 100%;


    background-image: url('img/board.jpg');
	background-size: 100%;
        background-repeat: no-repeat;
	filter: drop-shadow(2px 1px 10px #333);
	-webkit-filter: drop-shadow(2px 1px 10px #333);
}



.map_node
{
    position: absolute;
}

.map_node.city
{
    width: 30px;
    height: 30px;
    background-color: red;
}


.meeple {
	position: absolute;
	width: 96px;
	height: 100px;
	background-size: 600%;
    background-image: url('img/sprites.png');	

	filter: drop-shadow(3px 3px 2px #111);
	-webkit-filter: drop-shadow(3px 3px 2px #111);
	margin-top:-0px;
	margin-left: -0px;
	z-index:4;
	pointer-events: none;
}

.echo {
	width: 40px;
    height: 40px;
    display: inline-block;
    position: relative;
    margin-left: 0px;
    margin-right: -10px;
	filter: drop-shadow(1px 1px 2px #111);
	-webkit-filter: drop-shadow(1px 1px 2px #111);
}



.meeple.c009d4c
{
	background-position-x: 67%; 
}
.meeple.cfbe559
{
	background-position-x: 33%; 
}
.meeple.ce54640
{
	background-position-x: 0%; 
}
.meeple.c0090cf
{
	background-position-x: 17%; 
}
.meeple.c7b4d96
{
	background-position-x: 50%; 
}

.meeple.ca0744f
{
	background-position-x: 83%; 
}


.player_score {
	display: flex;
	vertical-align: center;
}
.player_score span{
	margin-top: auto;
	margin-bottom: auto;
}

.iconScore {
	width : 25px;	
	height : 25px;
    display: inline-block;
    position: relative;	
    margin-right: 5px;
    margin-left: 1px;
	filter: drop-shadow(3px 3px 3px #333);
	-webkit-filter: drop-shadow(2px 2px 2px #333);
}







